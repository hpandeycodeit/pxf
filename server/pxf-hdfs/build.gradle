apply plugin: "java-library"

jar {
    enabled = true
}

dependencies {
    /*******************************
     * API Dependencies
     *******************************/

    api(project(':pxf-api'))
    api("org.apache.hadoop:hadoop-mapreduce-client-core") { transitive = false }

    /*******************************
     * Compile Only Dependencies
     *******************************/

    compileOnly("org.apache.hadoop:hadoop-annotations")              { transitive = false }

    /*******************************
     * Implementation Dependencies
     *******************************/

    implementation("com.google.guava:guava")
    implementation("commons-codec:commons-codec")
    implementation("commons-configuration:commons-configuration")
    implementation("commons-io:commons-io")
    implementation("commons-lang:commons-lang")
    implementation("org.apache.commons:commons-lang3")
    implementation("org.slf4j:slf4j-api")

    implementation("org.apache.avro:avro-mapred")                    { transitive = false }
    implementation("com.fasterxml.jackson.core:jackson-databind")    { transitive = false }
    implementation("com.fasterxml.jackson.core:jackson-core")        { transitive = false }
    implementation("com.fasterxml.jackson.core:jackson-annotations") { transitive = false }
    implementation("org.apache.hadoop:hadoop-yarn-api")              { transitive = false } // Kerberos dependency
    implementation("org.apache.hadoop:hadoop-yarn-client")           { transitive = false } // Kerberos dependency
    implementation("org.apache.hadoop:hadoop-common")                { transitive = false }
    implementation("org.apache.htrace:htrace-core4")                 { transitive = false }
    implementation("org.apache.hadoop:hadoop-hdfs")                  { transitive = false }
    implementation("org.apache.hadoop:hadoop-hdfs-client")           { transitive = false }
    implementation("org.apache.parquet:parquet-format")              { transitive = false }
    implementation("org.apache.parquet:parquet-column")              { transitive = false }
    implementation("org.apache.parquet:parquet-common")              { transitive = false }
    implementation("org.apache.parquet:parquet-encoding")            { transitive = false }
    implementation("org.apache.parquet:parquet-generator")           { transitive = false }
    implementation("org.apache.parquet:parquet-hadoop")              { transitive = false }
    implementation("org.apache.parquet:parquet-jackson")             { transitive = false }
    implementation("org.apache.hive:hive-storage-api")               { transitive = false } // for parquet writing

    implementation("org.codehaus.jackson:jackson-core-asl")          { transitive = false }
    implementation("org.codehaus.jackson:jackson-mapper-asl")        { transitive = false }

    implementation("org.apache.avro:avro")                           { transitive = false }

    // Dependencies for writing Avro files with compression
    implementation("org.apache.commons:commons-compress")            { transitive = false }
    implementation("org.tukaani:xz")                                 { transitive = false }

    // Hadoop 2.10.1 uses log4j:1.2.17, but since we are using slf4j
    // we bring log4j-over-slf4j which provides compatibility for log4j
    // using underlying slf4j functionality (i.e MDC).
    implementation("org.slf4j:log4j-over-slf4j")                     { transitive = false }

    // Dependency in hadoop 2.10.1
    implementation("com.fasterxml.woodstox:woodstox-core")           { transitive = false }
    implementation("org.codehaus.woodstox:stax2-api")                { transitive = false }

    // ORC dependencies
    implementation("org.apache.orc:orc-core")                        { transitive = false }
    implementation("org.apache.orc:orc-shims")                       { transitive = false }
    implementation("org.apache.hive:hive-common")                    { transitive = false }
    implementation("com.google.protobuf:protobuf-java")              { transitive = false }
    implementation("org.threeten:threeten-extra")                    { transitive = false }

    /*******************************
     * Dependencies for Supported Hadoop-Compatible Filesystems
     *******************************/

    // Azure Data Blob
    implementation("org.apache.hadoop:hadoop-azure")                 { transitive = false }
    implementation("com.microsoft.azure:azure-storage")              { transitive = false }

    // Azure Datalake jars
    implementation("org.apache.hadoop:hadoop-azure-datalake")        { transitive = false }
    implementation("com.microsoft.azure:azure-data-lake-store-sdk")  { transitive = false }
    implementation("org.wildfly.openssl:wildfly-openssl")            { transitive = false }
    implementation("org.mortbay.jetty:jetty-util")                   { transitive = false }

    // GCS jars and dependencies
    implementation("com.google.cloud.bigdataoss:gcs-connector:hadoop2-1.9.17:shaded")
                                                                     { transitive = false }

    /*******************************
     * Test Dependencies
     *******************************/

    testCompileOnly("org.apache.hadoop:hadoop-annotations")

    testImplementation("io.airlift:aircompressor")       // for HcfsTypeTest for testing write URI with LzopCodec
    testImplementation("org.apache.parquet:parquet-pig") // for parquet tests
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}
